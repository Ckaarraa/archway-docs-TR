"use strict";(self.webpackChunkarchway_docs=self.webpackChunkarchway_docs||[]).push([[5392],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5188:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:3},s="Running a Validator Node",d={unversionedId:"validator/running-a-validator-node",id:"validator/running-a-validator-node",isDocsHomePage:!1,title:"Running a Validator Node",description:"This guide shows how to setup a validator node in simple steps.",source:"@site/docs/validator/running-a-validator-node.md",sourceDirName:"validator",slug:"/validator/running-a-validator-node",permalink:"/docs/validator/running-a-validator-node",editUrl:"https://github.com/archway-network/archway-docs/edit/main/docs/validator/running-a-validator-node.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Validator Requirements",permalink:"/docs/validator/requirements"},next:{title:"Monitoring a Validator",permalink:"/docs/validator/monitoring-validators"}},c=[{value:"Step 1: Initializing the node",id:"step-1-initializing-the-node",children:[]},{value:"Step 2: Initialize the account",id:"step-2-initialize-the-account",children:[]},{value:"Step 3: Generating transaction",id:"step-3-generating-transaction",children:[]},{value:"Step 4: Adding the transaction to the genesis file",id:"step-4-adding-the-transaction-to-the-genesis-file",children:[]},{value:"Step 5: Starting the validator node",id:"step-5-starting-the-validator-node",children:[]}],p={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"running-a-validator-node"},"Running a Validator Node"),(0,o.kt)("p",null,"This guide shows how to setup a validator node in simple steps."),(0,o.kt)("h2",{id:"step-1-initializing-the-node"},"Step 1: Initializing the node"),(0,o.kt)("p",null,"First let's create a directory to store all node's data and config."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir my-validator\n")),(0,o.kt)("p",null,"Run the following command to initialize the genesis file which is required to establish a network."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd init my-validator --chain-id my-chain --home ./my-validator\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," Please note that, we use ",(0,o.kt)("inlineCode",{parentName:"p"},"--home ./my-validator")," flag in almost all commands in order to tell ",(0,o.kt)("inlineCode",{parentName:"p"},"archwayd")," that we need to work on that specific directory."),(0,o.kt)("h2",{id:"step-2-initialize-the-account"},"Step 2: Initialize the account"),(0,o.kt)("p",null,"Create a key to hold your account. Once you run this command, your may be prompted with a password dialogue. Please enter a new password for your account."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd keys add my-validator-account\n")),(0,o.kt)("p",null,"Add that key into the genesis.app_state.accounts array in the genesis file."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," this command lets you set the number of coins. Make sure this account has some coins\nwith the genesis.app_state.staking.params.bond_denom denom, the default is staking."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd add-genesis-account $(archwayd keys show my-validator-account -a --home ./my-validator) 1000000000stake,1000000000validatortoken --home ./my-validator\n")),(0,o.kt)("h2",{id:"step-3-generating-transaction"},"Step 3: Generating transaction"),(0,o.kt)("p",null,"We need to generate a transaction creating the validator."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd gentx my-validator-account 1000000000stake --chain-id my-chain --home ./my-validator\n")),(0,o.kt)("h2",{id:"step-4-adding-the-transaction-to-the-genesis-file"},"Step 4: Adding the transaction to the genesis file"),(0,o.kt)("p",null,"Add the generated bonding transaction to the genesis file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd collect-gentxs --home ./my-validator\n")),(0,o.kt)("h2",{id:"step-5-starting-the-validator-node"},"Step 5: Starting the validator node"),(0,o.kt)("p",null,"Now we can start our validator node in the local archway network"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd start --home ./my-validator\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," If you have multiple nodes running on the same machine, you will get some errors on ",(0,o.kt)("inlineCode",{parentName:"p"},"already in use ports"),", you either need to run them in isolated environments ",(0,o.kt)("em",{parentName:"p"},"e.g. containers")," or edit ",(0,o.kt)("inlineCode",{parentName:"p"},"app.toml")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"conf.toml")," files to setup different port numbers."))}u.isMDXComponent=!0}}]);