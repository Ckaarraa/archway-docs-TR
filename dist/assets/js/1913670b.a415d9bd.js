"use strict";(self.webpackChunkarchway_docs=self.webpackChunkarchway_docs||[]).push([[782],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,i(i({ref:t},l),{},{components:n})):a.createElement(h,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8615:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return l}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],c={sidebar_position:1,title:"Creating an NFT project",description:"Build NFT projects with Archway's robust code scaffolding templates"},s=void 0,p={unversionedId:"create/guides/nft-project/start",id:"create/guides/nft-project/start",isDocsHomePage:!1,title:"Creating an NFT project",description:"Build NFT projects with Archway's robust code scaffolding templates",source:"@site/docs/create/guides/nft-project/start.md",sourceDirName:"create/guides/nft-project",slug:"/create/guides/nft-project/start",permalink:"/docs/create/guides/nft-project/start",editUrl:"https://github.com/archway-network/archway-docs/edit/main/docs/create/guides/nft-project/start.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Creating an NFT project",description:"Build NFT projects with Archway's robust code scaffolding templates"},sidebar:"mainSidebar",previous:{title:"Building a dApp frontend",permalink:"/docs/create/guides/my-first-dapp/dapp"},next:{title:"Deploying the token contract",permalink:"/docs/create/guides/nft-project/deploy"}},l=[{value:"Introduction",id:"introduction",children:[]},{value:"Creating your project",id:"creating-your-project",children:[]},{value:"Designing Your Tokens",id:"designing-your-tokens",children:[]}],u={toc:l};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This guide follows the below workflow:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#creating-your-project"},"Creating your project")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#designing-your-tokens"},"Customizing your token parameters")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/docs/create/guides/nft-project/deploy"},"Deploying your token contract")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/docs/create/guides/nft-project/interact"},"Minting and sending tokens")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/docs/create/guides/nft-project/dapp"},"Building the NFT dApp"))),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Non-Fungible Tokens, or NFTs, have been a hot topic during this past year. They've quickly become an essential component of the decentralized digital world. "),(0,o.kt)("p",null,"In this guide, we will learn how to write, deploy, mint and transfer our own NFTs. We'll also learn how to build a dApp website we can share with other users, so they can also mint and transfer tokens."),(0,o.kt)("h2",{id:"creating-your-project"},"Creating your project"),(0,o.kt)("p",null,"In the ",(0,o.kt)("a",{parentName:"p",href:"/docs/create/getting-started/setup"},"Setup")," section we learned how to create and configure a new Archway project."),(0,o.kt)("p",null,"If you haven't created a project before, navigate to ",(0,o.kt)("a",{parentName:"p",href:"/docs/create/getting-started/setup"},"Setup")," to learn what to install and familiarize yourself with so you can complete this step."),(0,o.kt)("p",null,"Now let\u2019s create a new project, and on the template selection list select the ",(0,o.kt)("em",{parentName:"p"},"CW721 with on-chain metadata")," template."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ archway new basic-nft\nCreating new Archway project...\n\u2714 Do you want to use a starter template? \u2026 yes\n? Choose a template \u203a - Use arrow-keys. Return to submit.\n    Increment\n    CW20\n    CW721 with off-chain metadata\n\u276f   CW721 with on-chain metadata\n    [https://github.com/archway-network/archway-templates/tree/main/cw721/on-chain-metadata]\n Select a testnet to use \u203a Constantine\n\ud83d\udd27   Generating template ...\n[ 1/35]   Done: .cargo/config\n# and so on, until...\n create mode 100644 schema/tokens_response.json\n create mode 100644 src/lib.rs\n\nSuccessfully created project basic-nft with network configuration constantine-1\n$ cd basic-nft\n")),(0,o.kt)("h2",{id:"designing-your-tokens"},"Designing Your Tokens"),(0,o.kt)("p",null,"The asset metadata is a critical element for any NFT. It defines information like the name, image URL, and other properties that can be pulled by NFT marketplaces to show relevant information for the users. Things like rarity, custom traits, etc., all are stored here."),(0,o.kt)("p",null,"In this example, we will keep our metadata on-chain. In other words, the contract will store the metadata in its internal state."),(0,o.kt)("p",null,"In the cw721-base code, NFT metadata is contained in the extension property of the ",(0,o.kt)("inlineCode",{parentName:"p"},"TokenInfo")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cw-nfts/blob/v0.9.3/contracts/cw721-base/src/state.rs#L91-L105"},"struct"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]\npub struct TokenInfo<T> {\n    /// The owner of the newly minted NFT\n    pub owner: Addr,\n    /// Approvals are stored here, as we clear them all upon transfer and cannot accumulate much\n    pub approvals: Vec<Approval>,\n\n    /// Universal resource identifier for this NFT\n    /// Should point to a JSON file that conforms to the ERC721\n    /// Metadata JSON Schema\n    pub token_uri: Option<String>,\n\n    /// You can add any custom metadata here when you extend cw721-base\n    pub extension: T,\n}\n")),(0,o.kt)("p",null,"To use this ",(0,o.kt)("inlineCode",{parentName:"p"},"extension")," property, here's how we define our metadata in the ",(0,o.kt)("inlineCode",{parentName:"p"},"CW721 with on-chain metadata")," template we cloned into our project."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"#[derive(Serialize, Deserialize, Clone, PartialEq, JsonSchema, Debug, Default)]\npub struct Trait {\n    pub display_type: Option<String>,\n    pub trait_type: String,\n    pub value: String,\n}\n\n#[derive(Serialize, Deserialize, Clone, PartialEq, JsonSchema, Debug, Default)]\npub struct Metadata {\n    pub image: Option<String>,\n    pub image_data: Option<String>,\n    pub external_url: Option<String>,\n    pub description: Option<String>,\n    pub name: Option<String>,\n    pub attributes: Option<Vec<Trait>>,\n    pub background_color: Option<String>,\n    pub animation_url: Option<String>,\n    pub youtube_url: Option<String>,\n}\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This code is located in ",(0,o.kt)("inlineCode",{parentName:"p"},"src/lib.rs")," of your project, you can also view it at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/archway-network/archway-templates/blob/main/cw721/on-chain-metadata/src/lib.rs#L9-L30"},"https://github.com/archway-network/archway-templates/blob/main/cw721/on-chain-metadata/src/lib.rs"),"."))))}d.isMDXComponent=!0}}]);