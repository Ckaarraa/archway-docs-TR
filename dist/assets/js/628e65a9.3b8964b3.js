"use strict";(self.webpackChunkarchway_docs=self.webpackChunkarchway_docs||[]).push([[8930],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(t),f=o,m=u["".concat(c,".").concat(f)]||u[f]||s[f]||a;return t?r.createElement(m,i(i({ref:n},d),{},{components:t})):r.createElement(m,i({ref:n},d))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3867:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],l={sidebar_position:2},c="Node Configuration",p={unversionedId:"node/configure",id:"node/configure",isDocsHomePage:!1,title:"Node Configuration",description:"By default, the init command creates your ~/.archway directory with subfolders config and data. In the config directory, the most important files for configuration are app.toml and config.toml. You can configure your node via editing these files.",source:"@site/docs/node/configure.md",sourceDirName:"node",slug:"/node/configure",permalink:"/docs/node/configure",editUrl:"https://github.com/archway-network/archway-docs/edit/main/docs/node/configure.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Node Installation",permalink:"/docs/node/install"},next:{title:"Running a Local Testnet",permalink:"/docs/node/running-a-local-testnet"}},d=[{value:"<code>config.toml</code>",id:"configtoml",children:[]},{value:"<code>app.toml</code>",id:"apptoml",children:[]}],s={toc:d};function u(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"node-configuration"},"Node Configuration"),(0,a.kt)("p",null,"By default, the ",(0,a.kt)("inlineCode",{parentName:"p"},"init")," command creates your ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.archway")," directory with subfolders ",(0,a.kt)("inlineCode",{parentName:"p"},"config")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"data"),". In the config directory, the most important files for configuration are ",(0,a.kt)("inlineCode",{parentName:"p"},"app.toml")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml"),". You can configure your node via editing these files. "),(0,a.kt)("p",null,"We explain few configs here to being with. For more details about configs, please open the ",(0,a.kt)("inlineCode",{parentName:"p"},"app.toml")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml")," files."),(0,a.kt)("h2",{id:"configtoml"},(0,a.kt)("inlineCode",{parentName:"h2"},"config.toml")),(0,a.kt)("p",null,"Here we explain various parts of configuration file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'proxy_app = "<PROTOCOL>://<HOST_ADDRESS>:<PORT>"\n')),(0,a.kt)("p",null,"ProxyApp is the TCP or UNIX socket address of the ABCI application, or the name of an ABCI application compiled in with the binary."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'moniker = "<A_CUSTOM_NAME>"\n')),(0,a.kt)("p",null,"Moniker is a custom human readable name for this node."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'genesis_file = "<PATH_TO_GENESIS_FILE>"\n')),(0,a.kt)("p",null,"Path to the JSON file containing the initial validator set and other meta data."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'priv_validator_key_file = "<PATH_TO_VALIDATOR_PRIVATE_KEY>"\n')),(0,a.kt)("p",null,"Path to the JSON file containing the private key to use as a validator in the consensus protocol."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[p2p]\nladdr = "tcp://<IP_ADDRESS>:<PORT>"\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"laddr")," is the address to listen for incoming connections in the peer-to-peer network."),(0,a.kt)("h2",{id:"apptoml"},(0,a.kt)("inlineCode",{parentName:"h2"},"app.toml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[api]\naddress = "tcp://<HOST_NAME>:<PORT>"\n')),(0,a.kt)("p",null,"Address defines the API server to listen on."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[grpc]\naddress = "tcp://<HOST_NAME>:<PORT>"\n')),(0,a.kt)("p",null,"Address defines the gRPC server address to bind to."))}u.isMDXComponent=!0}}]);