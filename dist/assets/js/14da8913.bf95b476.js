"use strict";(self.webpackChunkarchway_docs=self.webpackChunkarchway_docs||[]).push([[2463],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,g=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(g,s(s({ref:t},u),{},{components:n})):r.createElement(g,s({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9443:function(e,t,n){var r=(0,n(7294).createContext)(void 0);t.Z=r},2999:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return h},default:function(){return v},frontMatter:function(){return f},metadata:function(){return y},toc:function(){return k}});var r=n(7462),a=n(3366),o=n(7294),s=n(3905),i=n(9443);var c=function(){var e=(0,o.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=n(6010),u="tabItem_1uMI",p="tabItemActive_2DSg";var m=function(e){var t,n=e.lazy,r=e.block,a=e.defaultValue,s=e.values,i=e.groupId,m=e.className,d=o.Children.toArray(e.children),g=null!=s?s:d.map((function(e){return{value:e.props.value,label:e.props.label}})),f=null!=a?a:null==(t=d.find((function(e){return e.props.default})))?void 0:t.props.value,h=c(),y=h.tabGroupChoices,k=h.setTabGroupChoices,w=(0,o.useState)(f),v=w[0],b=w[1],C=[];if(null!=i){var N=y[i];null!=N&&N!==v&&g.some((function(e){return e.value===N}))&&b(N)}var j=function(e){var t=e.currentTarget,n=C.indexOf(t),r=g[n].value;b(r),null!=i&&(k(i,r),setTimeout((function(){var e,n,r,a,o,s,i,c;(e=t.getBoundingClientRect(),n=e.top,r=e.left,a=e.bottom,o=e.right,s=window,i=s.innerHeight,c=s.innerWidth,n>=0&&o<=c&&a<=i&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(p),setTimeout((function(){return t.classList.remove(p)}),2e3))}),150))},x=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=C.indexOf(e.target)+1;n=C[r]||C[0];break;case"ArrowLeft":var a=C.indexOf(e.target)-1;n=C[a]||C[C.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":r},m)},g.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,l.Z)("tabs__item",u,{"tabs__item--active":v===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:x,onFocus:j,onClick:j},null!=n?n:t)}))),n?(0,o.cloneElement)(d.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},d.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))};var d=function(e){var t=e.children,n=e.hidden,r=e.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:r},t)},g=["components"],f={sidebar_position:6},h="Building a dApp frontend",y={unversionedId:"create/guides/my-first-dapp/dapp",id:"create/guides/my-first-dapp/dapp",isDocsHomePage:!1,title:"Building a dApp frontend",description:"For building web frontends, the following npm packages work together to connect web pages to Archway Network.",source:"@site/docs/create/guides/my-first-dapp/dapp.mdx",sourceDirName:"create/guides/my-first-dapp",slug:"/create/guides/my-first-dapp/dapp",permalink:"/docs/create/guides/my-first-dapp/dapp",editUrl:"https://github.com/archway-network/archway-docs/edit/main/docs/create/guides/my-first-dapp/dapp.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Interacting with your contract",permalink:"/docs/create/guides/my-first-dapp/interact"},next:{title:"Node Installation",permalink:"/docs/node/install"}},k=[{value:"Connecting to Archway",id:"connecting-to-archway",children:[]},{value:"Querying the counter",id:"querying-the-counter",children:[]},{value:"Incrementing the counter",id:"incrementing-the-counter",children:[]},{value:"Clone it and try yourself",id:"clone-it-and-try-yourself",children:[]}],w={toc:k};function v(e){var t=e.components,n=(0,a.Z)(e,g);return(0,s.kt)("wrapper",(0,r.Z)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"building-a-dapp-frontend"},"Building a dApp frontend"),(0,s.kt)("p",null,"For building web frontends, the following ",(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npm")," packages work together to connect web pages to Archway Network."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@cosmjs/stargate"},"@cosmjs/stargate")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@cosmjs/cosmwasm-stargate"},"@cosmjs/cosmwasm-stargate")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@cosmjs/proto-signing"},"@cosmjs/proto-signing"))),(0,s.kt)("h4",{id:"cosmjsstargate"},"@cosmjs/stargate"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"@cosmjs/stargate")," is client library for the Cosmos SDK."),(0,s.kt)("h4",{id:"cosmjscosmwasm-stargate"},"@cosmjs/cosmwasm-stargate"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"@cosmjs/cosmwasm-stargate")," is an SDK to build CosmWasm clients. It extends ",(0,s.kt)("inlineCode",{parentName:"p"},"@cosmjs/stargate")," with functionality for ",(0,s.kt)("a",{parentName:"p",href:"https://cosmwasm.com/"},"CosmWasm")," contracts."),(0,s.kt)("h4",{id:"cosmjsproto-signing"},"@cosmjs/proto-signing"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"@cosmjs/proto-signing")," contains utilities for signing transactions from a wallet. It uses protobuf based signing as documented in ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/66c5798cec/docs/architecture/adr-020-protobuf-transaction-encoding.md"},"ADR-020")," and the ",(0,s.kt)("a",{parentName:"p",href:"https://warta.it/blog/cosmos-sdk-protobuf-signing"},"3 levels of proto encoding"),"."),(0,s.kt)("h3",{id:"connecting-to-archway"},"Connecting to Archway"),(0,s.kt)("p",null,"Let's connect an end user to Archway Network using a wallet mnemonic."),(0,s.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"In a real world use case we'd authorize using a browser extension. In browser authentication is a feature still actively being working on."))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'import { DirectSecp256k1HdWallet } from "@cosmjs/proto-signing";\nimport { SigningCosmWasmClient } from "@cosmjs/cosmwasm-stargate";\nimport { GasPrice } from "@cosmjs/stargate";\n\nconst RPC = "https://rpc.constantine-1.archway.tech:443"; // Or, titus deployments: `const RPC = "https://rpc.titus-1.archway.tech:443";`\nconst BECH32_PREFIX = "archway";\nconst userAddress = process.env.ACCOUNT_ADDRESS; // Your account address (pub address for mnemonic)\nconst mnemonic = process.env.ACCOUNT_MNEMONIC; // Your test mnemonic\n\nlet user, CosmWasmClient, queryHandler, gasPrice;\nconst init = async () =>  {\n  // User wallet\n  user = await DirectSecp256k1HdWallet.fromMnemonic(mnemonic, { prefix: BECH32_PREFIX });\n  // RPC access\n  CosmWasmClient = await SigningCosmWasmClient.connectWithSigner(RPC, user);\n  // Reference to querying a contract using the \'smart\' query module\n  queryHandler = CosmWasmClient.queryClient.wasm.queryContractSmart;\n  // Gas price\n  gasPrice = GasPrice.fromString(\'0.002uconst\');\n\n  console.log(\'dApp Initialized\', {\n    user: user,\n    client: CosmWasmClient,\n    queryHandler: queryHandler,\n    gasPrice: gasPrice\n  });\n}\n')),(0,s.kt)("h2",{id:"querying-the-counter"},"Querying the counter"),(0,s.kt)("p",null,"In the previous step we saved a reference to ",(0,s.kt)("inlineCode",{parentName:"p"},"CosmWasmClient.queryClient.wasm.queryContractSmart"),". We'll use it to query our ",(0,s.kt)("inlineCode",{parentName:"p"},"QueryMsg::GetCount")," entrypoint of the Increment contract. "),(0,s.kt)("p",null,"Just like when we queried from CLI, we need to convert entrypoints to lowercase and snake case. In JavaScript the arguments become ",(0,s.kt)("inlineCode",{parentName:"p"},"{get_count: {}}"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const getCount = async () => {\n  // Your contract address\n  const ContractAddress = process.env.CONTRACT_ADDRESS;\n  // Query arguments\n  let entrypoint = {\n    get_count: {}\n  };\n  // Do query type 'smart'\n  let queryResult = await queryHandler.query(ContractAddress, entrypoint);\n  console.log('GetCount Query', queryResult);\n},\n")),(0,s.kt)("h2",{id:"incrementing-the-counter"},"Incrementing the counter"),(0,s.kt)("p",null,"To broadcast transactions we call the ",(0,s.kt)("inlineCode",{parentName:"p"},"execute")," function, from our previous ",(0,s.kt)("inlineCode",{parentName:"p"},"CosmWasmClient")," reference, using the following arguments:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"userAddress")," - the address broadcasting the transaction"),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"ContractAddress")," - the address of the contract the user is transacting with"),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"entrypoint")," - arguments to be executed which match an entrypoint in the contract"),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"txFee")," - transaction fees calculated by the ",(0,s.kt)("inlineCode",{parentName:"li"},"calculateFee")," function from ",(0,s.kt)("inlineCode",{parentName:"li"},"@cosmjs/stargate"))),(0,s.kt)("p",null,"We convert the case of entrypoint arguments to lowercase and snake case again, so ",(0,s.kt)("inlineCode",{parentName:"p"},"ExecuteMsg::Increment {}")," from our Rust contract becomes ",(0,s.kt)("inlineCode",{parentName:"p"},"{increment: {}}")," in our JavaScript."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { calculateFee } from \"@cosmjs/stargate\";\n\nconst incrementCounter = async () => {\n  // Your contract address\n  const ContractAddress = process.env.CONTRACT_ADDRESS;\n  // Tx arguments\n  let entrypoint = {\n    increment: {}\n  };\n  // Gas fee estimation\n  let txFee = calculateFee(300_000, gasPrice);\n  // Send Tx\n  let tx = await CosmWasmClient.execute(userAddress, ContractAddress, entrypoint, txFee);\n  console.log('Increment Tx', tx);\n}\n")),(0,s.kt)("h2",{id:"clone-it-and-try-yourself"},"Clone it and try yourself"),(0,s.kt)("p",null,"You'll find working examples of dApp frontends for the Increment starter code template in the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/archway-network/dApp-examples"},"dApp examples repository"),". Examples are given in both ",(0,s.kt)("a",{parentName:"p",href:"https://vuejs.org/"},"Vue.js")," and ",(0,s.kt)("a",{parentName:"p",href:"https://reactjs.org/"},"React"),"."),(0,s.kt)(m,{mdxType:"Tabs"},(0,s.kt)(d,{value:"vue",label:"Vue.js",default:!0,mdxType:"TabItem"},(0,s.kt)("a",{href:"https://github.com/archway-network/dApp-examples/tree/main/vuejs/increment",target:"_blank"},"Vue Increment")),(0,s.kt)(d,{value:"react",label:"React",mdxType:"TabItem"},(0,s.kt)("a",{href:"https://github.com/archway-network/dApp-examples/tree/main/react/increment",target:"_blank"},"React Increment"))))}v.isMDXComponent=!0},6010:function(e,t,n){function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:function(){return a}})}}]);