"use strict";(self.webpackChunkarchway_docs=self.webpackChunkarchway_docs||[]).push([[5392],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(a),m=r,h=p["".concat(d,".").concat(m)]||p[m]||u[m]||o;return a?n.createElement(h,i(i({ref:t},c),{},{components:a})):n.createElement(h,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=p;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5188:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],l={sidebar_position:3},d="Running a Validator Node",s={unversionedId:"validator/running-a-validator-node",id:"validator/running-a-validator-node",isDocsHomePage:!1,title:"Running a Validator Node",description:"This guide shows how to setup a validator node in simple steps.",source:"@site/docs/validator/running-a-validator-node.md",sourceDirName:"validator",slug:"/validator/running-a-validator-node",permalink:"/docs/validator/running-a-validator-node",editUrl:"https://github.com/archway-network/archway-docs/edit/main/docs/validator/running-a-validator-node.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Validator Requirements",permalink:"/docs/validator/requirements"},next:{title:"Monitoring a Validator",permalink:"/docs/validator/monitoring-validators"}},c=[{value:"Initialize node",id:"initialize-node",children:[]},{value:"Initialize account",id:"initialize-account",children:[]},{value:"Create validator transaction",id:"create-validator-transaction",children:[]},{value:"Add transaction to genesis file",id:"add-transaction-to-genesis-file",children:[]},{value:"Start validator node",id:"start-validator-node",children:[]}],u={toc:c};function p(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"running-a-validator-node"},"Running a Validator Node"),(0,o.kt)("p",null,"This guide shows how to setup a validator node in simple steps."),(0,o.kt)("h2",{id:"initialize-node"},"Initialize node"),(0,o.kt)("p",null,"First let's create a directory to store all node's data and config."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir my-validator\n")),(0,o.kt)("p",null,"Run the following command to initialize the genesis file which is required to establish a network."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd init my-validator --chain-id my-chain --home ./my-validator\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," Please note that, we use ",(0,o.kt)("inlineCode",{parentName:"p"},"--home ./my-validator")," flag in almost all commands in order to tell ",(0,o.kt)("inlineCode",{parentName:"p"},"archwayd")," that we need to work on that specific directory."),(0,o.kt)("h2",{id:"initialize-account"},"Initialize account"),(0,o.kt)("p",null,"Create a key to hold your account. Once you run this command, your may be prompted with a password dialogue. Please enter a new password for your account."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd keys add my-validator-account\n")),(0,o.kt)("p",null,"Add that key into the genesis.app_state.accounts array in the genesis file."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," this command lets you set the number of coins. Make sure this account has some coins\nwith the genesis.app_state.staking.params.bond_denom denom, the default is staking."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd add-genesis-account $(archwayd keys show my-validator-account -a --home ./my-validator) 1000000000stake,1000000000validatortoken --home ./my-validator\n")),(0,o.kt)("h2",{id:"create-validator-transaction"},"Create validator transaction"),(0,o.kt)("p",null,"We need to generate a transaction creating the validator."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd gentx my-validator-account 1000000000stake --chain-id my-chain --home ./my-validator\n")),(0,o.kt)("h2",{id:"add-transaction-to-genesis-file"},"Add transaction to genesis file"),(0,o.kt)("p",null,"Add the generated bonding transaction to the genesis file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd collect-gentxs --home ./my-validator\n")),(0,o.kt)("h2",{id:"start-validator-node"},"Start validator node"),(0,o.kt)("p",null,"Now we can start our validator node in the local archway network"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"archwayd start --home ./my-validator\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," If you have multiple nodes running on the same machine, you will get some errors on ",(0,o.kt)("inlineCode",{parentName:"p"},"already in use ports"),", you either need to run them in isolated environments ",(0,o.kt)("em",{parentName:"p"},"e.g. containers")," or edit ",(0,o.kt)("inlineCode",{parentName:"p"},"app.toml")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"conf.toml")," files to setup different port numbers."))}p.isMDXComponent=!0}}]);